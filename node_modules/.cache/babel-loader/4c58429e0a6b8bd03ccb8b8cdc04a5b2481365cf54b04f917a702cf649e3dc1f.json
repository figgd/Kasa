{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fgd\\\\Desktop\\\\upd\\\\src\\\\components\\\\collapse\\\\Collapse.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collapse = ({\n  title,\n  content\n}) => {\n  _s();\n  //declaration du state en utilisant le Hook useState()\n  const [isOpen, setIsOpen] = useState(false); // je definie le state du toggle (et false par défaut)\n\n  //fonction pour gérer l'afichage du contenu des collapses\n  const display = () => {\n    setIsOpen(!isOpen);\n  };\n  return (\n    /*#__PURE__*/\n    // affiche le collapse replié par défaut et l'ouvre au clic puis le referme au clic en faisant disparaitre le texte et le style\n    _jsxDEV(\"div\", {\n      className: \"collapse__dropdown__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse__dropdown__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: display,\n          children: isOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-chevron-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-chevron-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse__dropdown__content\",\n        children: isOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Collapse, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Collapse;\nexport default Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Collapse","title","content","_s","isOpen","setIsOpen","display","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/fgd/Desktop/upd/src/components/collapse/Collapse.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Collapse = ({ title, content }) => {\n  //declaration du state en utilisant le Hook useState()\n  const [isOpen, setIsOpen] = useState(false); // je definie le state du toggle (et false par défaut)\n\n  //fonction pour gérer l'afichage du contenu des collapses\n  const display = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    // affiche le collapse replié par défaut et l'ouvre au clic puis le referme au clic en faisant disparaitre le texte et le style\n    <div className=\"collapse__dropdown__container\">\n      <div className=\"collapse__dropdown__title\">\n        <h2>{title}</h2>\n        <p onClick={display}>\n          {isOpen ? (\n            <i className=\"fa-solid fa-chevron-up\"></i>\n          ) : (\n            <i className=\"fa-solid fa-chevron-down\"></i>\n          )}\n        </p>\n      </div>\n      {/* Si le collapse est à TRUE alors il affichera la description */}\n      <div className=\"collapse__dropdown__content\">\n        {isOpen && <p>{content}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Collapse;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED;IAAA;IACE;IACAL,OAAA;MAAKQ,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC5CT,OAAA;QAAKQ,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBACxCT,OAAA;UAAAS,QAAA,EAAKP;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChBb,OAAA;UAAGc,OAAO,EAAEP,OAAQ;UAAAE,QAAA,EACjBJ,MAAM,gBACLL,OAAA;YAAGQ,SAAS,EAAC;UAAwB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,gBAE1Cb,OAAA;YAAGQ,SAAS,EAAC;UAA0B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAC5C;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENb,OAAA;QAAKQ,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EACzCJ,MAAM,iBAAIL,OAAA;UAAAS,QAAA,EAAIN;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV,CAAC;AAACT,EAAA,CA5BIH,QAAQ;AAAAc,EAAA,GAARd,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}